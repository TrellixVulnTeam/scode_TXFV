一. URL的设计
	
	url(pattern, view / include, {'key': value})

	1、url和视图之间的参数传递
	
	命名组和非命名组，额外参数   -- 视图函数可以有参数默认参数
								 -- 目的,从外部向视图函数传递参数

	2、include包含
		1. 条理					-- 包含模块路径
		2. 公共前缀				-- 包含url列表


	总之, 是url函数的构成


三、命名空间

	**多个url模式一个名字, 同样的名字存在与不同的app中


	url反向构成：三层，url, reverse, get_absolute_url

	反向解析url遇到的同一个view名不同url的问题
	使用命名空间引用url如, polls:index

	应用命名空间 --> 实例命名空间(默认实例)--> 特定名字的url

	实例命名空间到底是什么?
